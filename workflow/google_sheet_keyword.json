{
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -180,
        -280
      ],
      "id": "951c0446-573a-4216-8dd9-3830fdf48c1f",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "operation": "create",
        "documentId": {
          "__rl": true,
          "value": "={{ $('set_static_variables').item.json.google_sheet_url }}",
          "mode": "url"
        },
        "title": "={{ $('get_key_words').item.json.keyword }}",
        "options": {
          "tabColor": "0aa55c"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        780,
        -260
      ],
      "id": "6c39c936-c742-4458-baf9-e8b1b81654ab",
      "name": "create_sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "izrAu0TLjfaiadEk",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "={{ $('set_static_variables').item.json.google_sheet_url }}",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ $('set_static_variables').item.json.keyword_sheet_name }}",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        260,
        -280
      ],
      "id": "686e9dd3-2e71-4b3b-b15a-5109de82aac5",
      "name": "get_key_words",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "izrAu0TLjfaiadEk",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://suggestqueries.google.com/complete/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "client",
              "value": "firefox"
            },
            {
              "name": "q",
              "value": "={{ $('loop_key_words_1st').item.json.keyword }}"
            },
            {
              "name": "hl",
              "value": "zh-TW"
            },
            {
              "name": "oe",
              "value": "utf8"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1000,
        -260
      ],
      "id": "1ceb2f02-7025-40ef-987a-75d980d54c39",
      "name": "query_key_words_1st"
    },
    {
      "parameters": {
        "url": "https://suggestqueries.google.com/complete/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "client",
              "value": "firefox"
            },
            {
              "name": "q",
              "value": "={{ $json.values()[0] }}"
            },
            {
              "name": "hl",
              "value": "zh-TW"
            },
            {
              "name": "oe",
              "value": "utf8"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        820,
        220
      ],
      "id": "c0400fbd-83b8-471d-a644-0876b7237abc",
      "name": "query_key_words_2nd"
    },
    {
      "parameters": {
        "jsCode": "// 從 $input 取得資料\nconst inputData = $input.all()[0].json.data;\n\n// 解析 JSON 字串\nconst parsedData = JSON.parse(inputData);\n\n// 提取原本關鍵字\nconst orgKeyword = parsedData[0];\n\n// 提取所需的關鍵字陣列\nconst keywords = parsedData[1];\n\n// 先過濾\nconst filteredKeywords = keywords.filter(keyword => orgKeyword !== keyword);\n\nif (filteredKeywords.length === 0) {\n    // 如果沒有可用的關鍵字，就回傳空的資訊\n    return [{}]\n}\n\n// 將關鍵字轉換為指定的結構\nconst result = filteredKeywords.map(keyword => ({ [orgKeyword]: keyword }));\n\nreturn result;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1220,
        -260
      ],
      "id": "131079c0-2974-457f-abbb-b893b68604c9",
      "name": "format_query_result"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        520,
        -280
      ],
      "id": "a2ac407c-0ea7-43ae-a6d4-d81655cf7f20",
      "name": "loop_key_words_1st"
    },
    {
      "parameters": {
        "options": {
          "reset": "={{ $prevNode.name === 'reset_with_runtimes' }}"
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        200,
        80
      ],
      "id": "a7a2dbaf-3fc1-498c-be95-2f1299839925",
      "name": "loop_key_words_2nd",
      "executeOnce": false
    },
    {
      "parameters": {
        "jsCode": "// 取得輸入資料\nconst items = $input.all();\nlet newItems = [];\nfor (const item of items) {\n  if (item.json.result && Array.isArray(item.json.result)) {\n    for (const value of item.json.result) {\n      newItems.push({ json: { value } });\n    }\n  }\n}\nreturn newItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        820,
        20
      ],
      "id": "9cc8b12e-d6d6-4373-a116-937cb6aa3347",
      "name": "split_to_items"
    },
    {
      "parameters": {
        "jsCode": "const output = $input.last().json[\"value\"].reduce((acc, item) => {\n    if (item && typeof item === \"object\") { // 確保 item 是有效物件\n        const key = Object.keys(item)[0]; // 獲取每個物件的 key\n        const value = item[key];         // 獲取每個物件的 value\n        if (!acc[0]) {                   // 初始化累加器中的物件\n            acc[0] = {};\n        }\n        if (value !== undefined) {       // 確保 value 是有效的\n            acc[0][key] = value;         // 將 key-value 加入結果中\n        }\n    }\n    return acc; // 無論是否處理了 item，均返回累加結果\n}, [{}]);\n\nconsole.log(output);\nreturn output;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1660,
        80
      ],
      "id": "b1dc217b-144f-48a4-8e72-e7ac18ea750e",
      "name": "remove_undefined_key"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "={{ $('set_static_variables').first().json.google_sheet_url }}",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ $('create_sheet').first().json.sheetId }}",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "健身工廠",
              "displayName": "健身工廠",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "健身房",
              "displayName": "健身房",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "健身工廠費用",
              "displayName": "健身工廠費用",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "健身器材",
              "displayName": "健身器材",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "健身房費用",
              "displayName": "健身房費用",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "健身 英文",
              "displayName": "健身 英文",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "健身環",
              "displayName": "健身環",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "健身教練",
              "displayName": "健身教練",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "健身教練證照",
              "displayName": "健身教練證照",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2300,
        120
      ],
      "id": "c9cc271e-6e0f-49a3-9593-a5a574e788a8",
      "name": "append_row_data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "izrAu0TLjfaiadEk",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": "={{ $prevNode.name === 'reset_with_even_runtimes' }}"
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1380,
        0
      ],
      "id": "3ab01dde-5579-482d-9f5a-6618a59de666",
      "name": "loop_append_row_data",
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0f23e173-d053-430d-a03b-226ef34b5154",
              "leftValue": "={{ $runIndex }}",
              "rightValue": "={{ $('get_key_words').all().length }}",
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -60,
        100
      ],
      "id": "a7d29051-a3c9-42b1-ab97-427f5f69f62a",
      "name": "reset_with_runtimes"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d922d404-8c3d-42e3-a5dd-f9cc84492f6b",
              "leftValue": "={{ $runIndex % 2 }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1060,
        20
      ],
      "id": "02a54d13-ee9d-4f86-a364-1e66905837a4",
      "name": "reset_with_even_runtimes"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4eacc541-e52d-47c9-b15b-e6dc313befce",
              "leftValue": "={{ $runIndex }}",
              "rightValue": "={{ $('get_key_words').all().length - 1 }}",
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1880,
        320
      ],
      "id": "60236516-a9ee-4c83-a93c-8bc930838ef7",
      "name": "skip_last_runtime"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe95e2e2-7fbb-4756-817c-dd5fa654ee3a",
              "name": "google_sheet_url",
              "value": "Paste your google sheet url",
              "type": "string"
            },
            {
              "id": "d00fbdbf-8cdf-4886-868b-47497277ba16",
              "name": "keyword_sheet_name",
              "value": "工作表1",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        40,
        -280
      ],
      "id": "ed9dbd1c-4dd6-4e56-9317-7562a4d1565a",
      "name": "set_static_variables"
    },
    {
      "parameters": {
        "jsCode": "// 從 $input 取得資料\nconst inputData = $input.all()[0].json.data;\n\n// 解析 JSON 字串\nconst parsedData = JSON.parse(inputData);\n\n// 提取原本關鍵字\nconst orgKeyword = parsedData[0];\n\n// 提取所需的關鍵字陣列\nconst keywords = parsedData[1];\n\n// 先過濾\nconst filteredKeywords = keywords.filter(keyword => orgKeyword !== keyword);\n\nif (filteredKeywords.length === 0) {\n    // 如果沒有可用的關鍵字，就回傳空的資訊\n    return [{}]\n}\n\n// 將關鍵字轉換為指定的結構\nconst result = filteredKeywords.map(keyword => ({ [orgKeyword]: keyword }));\n\nreturn result;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1060,
        260
      ],
      "id": "aaa092bf-660a-4fd0-8333-fd97b3c24e5b",
      "name": "format_query_result2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "// 原始資料\nconst items = $input.all();\nconst changeFormat = items.map(item => item.json);\n\n// 收集所有的 key 值\nconst keys = [...new Set(changeFormat.map(item => Object.keys(item)[0]))];\n\n// 按 key 分組，將相同 key 的值放在相同位置的陣列中\nconst groupedData = keys.map((key) => {\n    return changeFormat\n        .filter(item => Object.keys(item)[0] === key)\n        .map(item => ({ [key]: Object.values(item)[0] }));\n});\n\n// 將資料進行列對齊轉換\nconst result = [];\nfor (let i = 0; i < groupedData[0].length; i++) {\n    const row = groupedData.map(group => group[i]);\n    result.push(row);\n}\n\nreturn [{result}]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        20
      ],
      "id": "5d31a9e0-f56d-4bc5-b1b0-0bc586026413",
      "name": "group_keys"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3944901d-f440-4370-860e-2953f93b9c05",
              "leftValue": "={{ $json.keys().length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        580,
        200
      ],
      "id": "a301395b-a4dc-4821-bc09-cc4ef84728e6",
      "name": "check_keyword_2nd_has_value"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32cb7dec-8421-4c7b-ba4c-8fa5b75114f8",
              "leftValue": "={{ $json.keys().length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1880,
        80
      ],
      "id": "fe701b55-d83d-44d1-a7c2-de95191bfca1",
      "name": "check_key_length"
    },
    {
      "parameters": {
        "amount": 2.5
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2100,
        100
      ],
      "id": "b09f720f-2c5d-481d-b073-984f5058ccbe",
      "name": "wait_2.5s",
      "webhookId": "75b97159-e184-403d-8c3e-36e0df4980c0"
    }
  ],
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "set_static_variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create_sheet": {
      "main": [
        [
          {
            "node": "query_key_words_1st",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_key_words": {
      "main": [
        [
          {
            "node": "loop_key_words_1st",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "query_key_words_1st": {
      "main": [
        [
          {
            "node": "format_query_result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "query_key_words_2nd": {
      "main": [
        [
          {
            "node": "format_query_result2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format_query_result": {
      "main": [
        [
          {
            "node": "reset_with_runtimes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop_key_words_1st": {
      "main": [
        [],
        [
          {
            "node": "create_sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop_key_words_2nd": {
      "main": [
        [
          {
            "node": "group_keys",
            "type": "main",
            "index": 0
          },
          {
            "node": "reset_with_runtimes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "check_keyword_2nd_has_value",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "split_to_items": {
      "main": [
        [
          {
            "node": "reset_with_even_runtimes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "remove_undefined_key": {
      "main": [
        [
          {
            "node": "check_key_length",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "append_row_data": {
      "main": [
        [
          {
            "node": "loop_append_row_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop_append_row_data": {
      "main": [
        [
          {
            "node": "reset_with_even_runtimes",
            "type": "main",
            "index": 0
          },
          {
            "node": "skip_last_runtime",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "remove_undefined_key",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reset_with_runtimes": {
      "main": [
        [
          {
            "node": "loop_key_words_2nd",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reset_with_even_runtimes": {
      "main": [
        [
          {
            "node": "loop_append_row_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "skip_last_runtime": {
      "main": [
        [
          {
            "node": "loop_key_words_1st",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_static_variables": {
      "main": [
        [
          {
            "node": "get_key_words",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "format_query_result2": {
      "main": [
        [
          {
            "node": "loop_key_words_2nd",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "group_keys": {
      "main": [
        [
          {
            "node": "split_to_items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_keyword_2nd_has_value": {
      "main": [
        [
          {
            "node": "query_key_words_2nd",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "loop_key_words_2nd",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_key_length": {
      "main": [
        [
          {
            "node": "wait_2.5s",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "loop_append_row_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wait_2.5s": {
      "main": [
        [
          {
            "node": "append_row_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {}
}